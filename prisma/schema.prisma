datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int                 @id @default(autoincrement())
  firstName    String
  lastName     String
  phoneNumber  String              @unique

  sentRequests     FriendRequest[] @relation("requestSender")
  receivedRequests FriendRequest[] @relation("requestReceiver")

  userFriendships   Friendship[]   @relation("UserFriendships")
  friendFriendships Friendship[]   @relation("FriendFriendships")
}

model FriendRequest {
  id          Int  @id @default(autoincrement())
  status      RequestStatus

  senderId    Int
  sender      User  @relation("requestSender", fields: [senderId], references: [id])

  receiverId  Int
  receiver    User  @relation("requestReceiver", fields: [receiverId], references: [id])

  @@unique([senderId, receiverId])
}

model Friendship {
  id         Int   @id @default(autoincrement())

  userId     Int
  user       User  @relation("UserFriendships", fields: [userId], references: [id])

  friendId   Int
  friend     User  @relation("FriendFriendships", fields: [friendId], references: [id])

  // prevent duplicate friendships by enforcing bidirectional uniqueness
  @@unique([userId, friendId])
  @@unique([friendId, userId])
}

enum RequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}
